// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { Sprite } from '../deca/sprite.js';


export class AnimatedSprite {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):AnimatedSprite {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsAnimatedSprite(bb:flatbuffers.ByteBuffer, obj?:AnimatedSprite):AnimatedSprite {
  return (obj || new AnimatedSprite()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsAnimatedSprite(bb:flatbuffers.ByteBuffer, obj?:AnimatedSprite):AnimatedSprite {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new AnimatedSprite()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

index():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

set():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

direction():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

action():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

sprite(obj?:Sprite):Sprite|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new Sprite()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startAnimatedSprite(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, nameOffset, 0);
}

static addIndex(builder:flatbuffers.Builder, index:number) {
  builder.addFieldInt32(1, index, 0);
}

static addSet(builder:flatbuffers.Builder, set:number) {
  builder.addFieldInt32(2, set, 0);
}

static addDirection(builder:flatbuffers.Builder, direction:number) {
  builder.addFieldInt32(3, direction, 0);
}

static addAction(builder:flatbuffers.Builder, action:number) {
  builder.addFieldInt32(4, action, 0);
}

static addSprite(builder:flatbuffers.Builder, spriteOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, spriteOffset, 0);
}

static endAnimatedSprite(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
